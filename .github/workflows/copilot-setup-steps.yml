name: "Copilot Setup Steps"

# Allow testing of the setup steps from your repository's "Actions" tab.
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            9.x
            10.0.100-rc.1.25451.107
          dotnet-quality: 'preview'

      - name: Verify .NET 10 installation or install manually
        run: |
          echo "Checking installed .NET versions:"
          dotnet --list-sdks
          
          # Check if .NET 10 is installed
          if ! dotnet --list-sdks | grep -q "10\.0\."; then
            echo ".NET 10 not found via setup-dotnet, installing manually..."
            curl -sSL https://dot.net/v1/dotnet-install.sh > dotnet-install.sh
            chmod +x dotnet-install.sh
            ./dotnet-install.sh --channel 10.0 --quality preview --install-dir ~/.dotnet
            echo "~/.dotnet" >> $GITHUB_PATH
            export PATH="$HOME/.dotnet:$PATH"
            echo "After manual installation:"
            dotnet --list-sdks
          else
            echo ".NET 10 is already installed"
          fi

      - name: Install .NET WASM workload
        run: dotnet workload install wasm-tools

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          
      - name: Restore .NET packages
        run: dotnet restore

      - name: Install Cloudflare Worker dependencies
        run: |
          cd weathered-base-bad8
          npm install
