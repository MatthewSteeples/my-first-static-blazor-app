@using BlazorApp.Shared

@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3>@ItemToTrack.Name</h3>
<p>@ItemToTrack.PastOccurrences.Count instances tracked</p>

<Microsoft.FluentUI.AspNetCore.Components.FluentAccordion>
    @if (ItemToTrack.PastOccurrences.Any())
    {
        <Microsoft.FluentUI.AspNetCore.Components.FluentAccordionItem Heading="Past Occurrences">
            <ol>
                @foreach (var occurrence in ItemToTrack.PastOccurrences)
                {
                    <li>@occurrence.ActualTimestamp</li>
                }
            </ol>
        </Microsoft.FluentUI.AspNetCore.Components.FluentAccordionItem>
    }

    <Microsoft.FluentUI.AspNetCore.Components.FluentAccordionItem Heading="Next Occurrences">
        <ol>
            @foreach (var occurrence in ItemToTrack.GetFutureOccurrences(DateTime.UtcNow, 5))
            {
                <li>@occurrence</li>
            }
        </ol>
    </Microsoft.FluentUI.AspNetCore.Components.FluentAccordionItem>

</Microsoft.FluentUI.AspNetCore.Components.FluentAccordion>

<button @onclick="OnClick">Track</button>

@code {
    void OnClick()
    {
        ItemToTrack.AddOccurrence(DateTime.UtcNow);
        localStorage.SetItemAsync(nameof(TrackedItem) + ItemToTrack.Name, ItemToTrack);
    }

    [Parameter]
    public TrackedItem ItemToTrack { get; set; }
}
