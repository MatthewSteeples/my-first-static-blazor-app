@page "/settings"
@using BlazorApp.Shared
@using Microsoft.FluentUI.AspNetCore.Components

@inject IJSRuntime JS

<PageTitle>Settings</PageTitle>

<h1>Settings</h1>

<h2>Data Management</h2>

<p>
    <BlazorApp.Client.Components.Export />
    <a href="/import" class="btn btn-success">Import Data</a>
</p>

<h2>Progressive Web App</h2>

<p>
    <button class="btn btn-primary" @onclick="InstallPWA" style="@installButtonStyle">Install App</button>
</p>

<div class="alert alert-info">
    <p><strong>Install Button Not Showing?</strong></p>
    <ul>
        <li>Make sure you're accessing the site over HTTPS (not HTTP)</li>
        <li>Check if the app is already installed</li>
        <li>Some browsers don't support PWA installation</li>
        <li>The browser may need time to recognize the app as installable</li>
    </ul>
    <button class="btn btn-secondary btn-sm" @onclick="CheckPWAStatus">Check PWA Status</button>
</div>

@code {
    private string installButtonStyle = "display: none;";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("setupPWAInstall", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public void ShowInstallButton()
    {
        installButtonStyle = "display: block;";
        StateHasChanged();
    }

    [JSInvokable]
    public void HideInstallButton()
    {
        installButtonStyle = "display: none;";
        StateHasChanged();
    }

    private async Task InstallPWA()
    {
        await JS.InvokeVoidAsync("installPWA");
    }

    private async Task CheckPWAStatus()
    {
        await JS.InvokeVoidAsync("checkPWAInstallCriteria");
    }

    public void Dispose()
    {
        // Clean up if needed
    }
}