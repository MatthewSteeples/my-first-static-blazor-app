@page "/edit/{id:guid}"
@using BlazorApp.Shared
@inject NavigationManager Navigation

@inject Blazored.LocalStorage.ILocalStorageService localStorage

<EditForm Model="Item" OnSubmit="Save">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label>
        Name:
        <InputText @bind-Value="Item.Name" />
    </label>
    <button type="submit" class="btn btn-success">Save</button>
    <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
    <button @onclick="Delete" class="btn btn-danger">Delete</button>
</EditForm>

@code {
    [Parameter]
    public Guid Id { get; set; }

    [SupplyParameterFromForm]
    public TrackedItem Item { get; set; } = new TrackedItem(); //Needs to be "new" otherwise the form complains as it loads before the data is loaded

    protected override async Task OnInitializedAsync()
    {
        var loadedItem = await localStorage.GetItemAsync<TrackedItem>(nameof(TrackedItem) + Id);

        if (loadedItem != null)
        {
            Item = loadedItem;
        }
        else
        {
            Item.Id = Id;
        }
    }

    async void Save()
    {
        await localStorage.SetItemAsync(nameof(TrackedItem) + Item.Id, Item);
        Navigation.NavigateTo("/");
    }

    void Cancel()
    {
        Navigation.NavigateTo("/");
    }

    async void Delete()
    {
        await localStorage.RemoveItemAsync(nameof(TrackedItem) + Item.Id);
        Navigation.NavigateTo("/");
    }
}
